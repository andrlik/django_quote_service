# Generated by Django 4.0.2 on 2022-02-05 18:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import rules.contrib.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('public', models.BooleanField(default=False, help_text='Is this a public source available for any user to view?')),
                ('allow_submissions', models.BooleanField(default=False, help_text='Allow submissions from other users?')),
                ('name', models.CharField(help_text='Name of the character', max_length=100)),
                ('slug', models.SlugField(blank=True, help_text='Global slug of the character, will be auto generated from name and group if not overriden.', max_length=250, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this character. You can style this with Markdown.', null=True)),
                ('description_rendered', models.TextField(blank=True, help_text='Automatically generated from description.', null=True)),
                ('allow_markov', models.BooleanField(default=False, help_text='Allow to be used in markov chains?')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('public', models.BooleanField(default=False, help_text='Is this a public source available for any user to view?')),
                ('allow_submissions', models.BooleanField(default=False, help_text='Allow submissions from other users?')),
                ('quote', models.TextField(help_text='Plain text representation of quote. You can use Markdown here.')),
                ('quote_rendered', models.TextField(blank=True, help_text='HTML rendered version of quote generated from quote plain text.', null=True)),
                ('character', models.ForeignKey(help_text='The character who said this.', on_delete=django.db.models.deletion.CASCADE, to='quotes.character')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CharacterMarkovModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('data', models.JSONField(blank=True, null=True)),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='quotes.character')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CharacterGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('public', models.BooleanField(default=False, help_text='Is this a public source available for any user to view?')),
                ('allow_submissions', models.BooleanField(default=False, help_text='Allow submissions from other users?')),
                ('name', models.CharField(db_index=True, help_text='A source for individuals making the quotes. Use as an abstract grouping.', max_length=50, unique=True, verbose_name='Source Name')),
                ('description', models.TextField(blank=True, help_text='Description for the source. You can style using Markdown.', null=True)),
                ('description_rendered', models.TextField(blank=True, help_text='Automatically generated from description', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='character',
            name='group',
            field=models.ForeignKey(help_text='The group this character belongs to.', on_delete=django.db.models.deletion.CASCADE, to='quotes.charactergroup'),
        ),
        migrations.AddField(
            model_name='character',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
