name: Codestyle Checks

# Enable Buildkit and let compose use it to speed up image building
#env:
#  DOCKER_BUILDKIT: 1
#  COMPOSE_DOCKER_CLI_BUILD: 1

env:
  DJANGO_DEBUG: True

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore: [ "docs/**", "README.md", "LICENSE", "CONTRIBUTORS.txt", "Justfile", ".readthedocs.yml", ".pre-commit-config.yaml", ".license-tools-config.json", ".gitignore", "mkdocs.yml"]

  push:
    branches: [ "main" ]
    paths-ignore: [ "docs/**", "README.md", "LICENSE", "CONTRIBUTORS.txt", "Justfile", ".readthedocs.yml", ".pre-commit-config.yaml", ".license-tools-config.json", ".gitignore", "mkdocs.yml"]


jobs:
  linter:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Setup Python
        run: uv python install 3.12

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-Python3.12-linter-${{ hashFiles('uv.lock') }}
          restore-keys: venv-Python3.12-linter

      - name: Create venv, install dependencies
        run: |
          uv sync
          source .venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

      - name: Run linter
        run: uv run ruff check

      - name: Check types
        run: uv run pyright

      - name: Check safety
        run: uv run -m bandit -c pyproject.toml -r django_quote_service
